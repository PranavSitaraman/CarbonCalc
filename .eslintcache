[{"C:\\Users\\Pranav\\Documents\\Visual Studio Code\\CharterHacks\\src\\reportWebVitals.ts":"1","C:\\Users\\Pranav\\Documents\\Visual Studio Code\\CharterHacks\\src\\routes\\About.tsx":"2","C:\\Users\\Pranav\\Documents\\Visual Studio Code\\CharterHacks\\src\\routes\\Home.tsx":"3","C:\\Users\\Pranav\\Documents\\Visual Studio Code\\CharterHacks\\src\\index.tsx":"4","C:\\Users\\Pranav\\Documents\\Visual Studio Code\\CharterHacks\\src\\routes\\History.tsx":"5"},{"size":428,"mtime":1628385139618,"results":"6","hashOfConfig":"7"},{"size":3486,"mtime":1628448451864,"results":"8","hashOfConfig":"7"},{"size":1467,"mtime":1628414093759,"results":"9","hashOfConfig":"7"},{"size":380,"mtime":1628800142245,"results":"10","hashOfConfig":"7"},{"size":1182,"mtime":1628796777911,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1e9b5is",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"C:\\Users\\Pranav\\Documents\\Visual Studio Code\\CharterHacks\\src\\reportWebVitals.ts",[],"C:\\Users\\Pranav\\Documents\\Visual Studio Code\\CharterHacks\\src\\routes\\About.tsx",["24"],"import React, { useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { ChromeMessage, Sender } from \".././types\";\nimport '.././App.css';\nexport const About = () =>\n{\n    let {push} = useHistory();\n    const [responseContentOne, setResponseFromContentOne] = useState<string>('');\n    const [responseContentTwo, setResponseFromContentTwo] = useState<string>('');\n    const [responseContentThree, setResponseFromContentThree] = useState<string>('');\n    const [responseContentFour, setResponseFromContentFour] = useState<string>('');\n    const [responseContentFive, setResponseFromContentFive] = useState<string>('');\n    const sendone = () =>\n    {\n        const message: ChromeMessage = { from: Sender.React, message: \"one\", };\n        const queryInfo: chrome.tabs.QueryInfo = { active: true, currentWindow: true };\n        chrome.tabs && chrome.tabs.query(queryInfo, tabs =>\n            {\n            const currentTabId = tabs[0].id;\n            chrome.tabs.sendMessage(currentTabId!, message, (response) => { setResponseFromContentOne(response); });\n        });\n    };\n    const sendtwo = () =>\n    {\n        const message: ChromeMessage = { from: Sender.React, message: \"two\", };\n        const queryInfo: chrome.tabs.QueryInfo = { active: true, currentWindow: true };\n        chrome.tabs && chrome.tabs.query(queryInfo, tabs =>\n            {\n            const currentTabId = tabs[0].id;\n            chrome.tabs.sendMessage(currentTabId!, message, (response) => { setResponseFromContentTwo(response); });\n        });\n    };\n    const sendthree = () =>\n    {\n        const message: ChromeMessage = { from: Sender.React, message: \"three\", };\n        const queryInfo: chrome.tabs.QueryInfo = { active: true, currentWindow: true };\n        chrome.tabs && chrome.tabs.query(queryInfo, tabs =>\n            {\n            const currentTabId = tabs[0].id;\n            chrome.tabs.sendMessage(currentTabId!, message, (response) => { setResponseFromContentThree(response); });\n        });\n    };\n    const sendfour = () =>\n    {\n        const message: ChromeMessage = { from: Sender.React, message: \"four\", };\n        const queryInfo: chrome.tabs.QueryInfo = { active: true, currentWindow: true };\n        chrome.tabs && chrome.tabs.query(queryInfo, tabs =>\n            {\n            const currentTabId = tabs[0].id;\n            chrome.tabs.sendMessage(currentTabId!, message, (response) => { setResponseFromContentFour(response); });\n        });\n    };\n    const sendfive = () =>\n    {\n        const message: ChromeMessage = { from: Sender.React, message: \"five\", };\n        const queryInfo: chrome.tabs.QueryInfo = { active: true, currentWindow: true };\n        chrome.tabs && chrome.tabs.query(queryInfo, tabs =>\n            {\n            const currentTabId = tabs[0].id;\n            chrome.tabs.sendMessage(currentTabId!, message, (response) => { setResponseFromContentFive(response); });\n        });\n    };\n    sendone();\n    sendtwo();\n    sendthree();\n    sendfour();\n    sendfive();\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <p>{responseContentOne}</p>\n                <p>{responseContentTwo}</p>\n                <p>{responseContentThree}</p>\n                <p id = \"bad\">{responseContentFour}</p>\n                <p id = \"good\">{responseContentFive}</p>\n                <button id =\"home\" onClick={() => { push('/history') }}>History</button>\n            </header>\n        </div>\n    )\n}\n","C:\\Users\\Pranav\\Documents\\Visual Studio Code\\CharterHacks\\src\\routes\\Home.tsx",[],"C:\\Users\\Pranav\\Documents\\Visual Studio Code\\CharterHacks\\src\\index.tsx",[],"C:\\Users\\Pranav\\Documents\\Visual Studio Code\\CharterHacks\\src\\routes\\History.tsx",["25"],"import React, { useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ChromeMessage, Sender } from \".././types\";\r\nimport '.././App.css';\r\nimport process from 'process';\r\nexport const History = () =>\r\n{\r\n    let {push} = useHistory();\r\n    const [totalrep, responseTotal] = useState<string>('');\r\n    const findTotal = () =>\r\n    {\r\n        const message: ChromeMessage = { from: Sender.React, message: \"return co2\" };\r\n        const queryInfo: chrome.tabs.QueryInfo = { active: true, currentWindow: true };\r\n        chrome.tabs && chrome.tabs.query(queryInfo, tabs =>\r\n            {\r\n            const currentTabId = tabs[0].id;\r\n            chrome.tabs.sendMessage(currentTabId!, message, (response) => { responseTotal(response); });\r\n        });\r\n    };\r\n    findTotal();\r\n    var newco2 = parseFloat(totalrep);\r\n    var a = 'Lifetime Emissions: ' + Math.round(newco2 * 1000 * 100)/100 + ' milligrams';\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <p>{a}</p>\r\n                <button id =\"home\" onClick={() => { push('/') }}>Home</button>\r\n            </header>\r\n        </div>\r\n    )\r\n}\r\n",{"ruleId":"26","severity":1,"message":"27","line":1,"column":17,"nodeType":"28","messageId":"29","endLine":1,"endColumn":26},{"ruleId":"26","severity":1,"message":"30","line":5,"column":8,"nodeType":"28","messageId":"29","endLine":5,"endColumn":15},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'process' is defined but never used."]